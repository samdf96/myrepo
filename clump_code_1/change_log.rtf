{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww27620\viewh16580\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 Change Log - Clumping Code\
\
v3.3 - June 20th 2018\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Changes to clump_code_1.py\
	Added: Error catch for RuntimeError caused by clumps having zero width in one or more axial direction\
		- this promotes the mass total quantity function from yt to fail and return a run time error due to width being zero\
		- this writes nan to the value in the FITS column, and adds a comment saying so in the header\
\
Changes to definitions.py:\
	Added: while loop added into velocity_array definition to catch runtime error: outputs broken value which is detected by main script\
\
Changes to exceptions.py:\
	Added: two definitions\
		- YTRuntimeError - Generic error with comment and pass statement\
		- YTPassThrough - For the next part of the main to pass through arbitrarily to the end to make changes.\
\
v3.2 - June 18th 2018\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Changes to clump_code_1.py\
	- Added: from definitions import proj_creator (see below for definition)\
	- added com arrays for the plotting overlay, concatenation needed to be used for 2D arrays\
	- calling proj_creator to build plots for the visualization of clump center-of-masses\
Changes to definitions:\
	-Added: proj_creator:\
		- Takes in data set, data_object, center of mass info, and string\
		- Creates three plots, one for each axis\
		- These are projection plots with center of mass points overlayed on top\
		- Auto saves, using the input string argument\
\
v3.1 - June 11th 2018\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Changes to clump_code_1.py\
	- Added: import os\
				- Allows the creation of directories at the end for storing data\
				- Made so that it detects, and gives user warning when overwriting files.\
\
v3.0 - June 5th 2018\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Changes: 	- Small tweaks made to commenting in the code\
			- Added export function of error messages to COMMENT(s) in the Header for FITS\
\
v2.9 - June 5th 2018\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Added:\
	- exceptions.py\
		- Class definitions for exceptions raised by the functions in the definition file and main file\
Changes to clump_code_1.py\
	- Importing Custom Errors from exceptions.py file\
	- added printing statement for current simulation file being worked on\
	- added while loop for error detection from broken variable passed by definitions file\
	- created error list of strings to keep track of which clumps output errors through the code\
Changes to definitions.py\
	- Switched from True/False statements to integer statements for error variable output\
\
\
v2.8 - May 31st 2018\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Changes to clump_code_1.py\
	- Added headers to the fits file, to store global input parameters listed in the yams config file\
	- Changed naming structure for output file, now naming Fiducialxx runs to avoid doubling up on files and getting errors. Might need to change this one last time if we are inputting multiple config files.\
Added: yaml_writer.py\
	- Not completed yet, but takes in a dictionary of global input parameters, and makes a yam file.\
	- Might be deprecated in the future, can write these files in a basic text editor.\
Changes to initialize.py\
	- Made all arguments different for directories, to reflect changes from local space to server space\
	- Will need to test this to ensure proper functionality, expect changes to next version.\
\
v2.7 - May 28th 2018\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Changes to clump_code_1.py\
	- moved \'93global parameters\'94 to initialize.py file\
	- wrapped entire file in a def statement that takes in one filename input, and outputs a FITS file\
		- called the analyzer function\
	- Fixed:\
		- Unit assignment was incorrect for some quantities, has been corrected.\
	- Added:\
		- String splitter, takes the incoming file name, and grabs the timestamp, assigns it to output\
\
Added: initialize.py\
	- Script defines (for now) global parameters\
	- Calls the analyzer function with filename, and all global parameters\
	- Inserted the module glob, which can search for filenames and extensions, and can pass it onto the analyzer function to compute all the necessary values\
\
\
v2.6 - May 24th 2018\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Changes to clump_code_1.py\
	- added in astropy.units module\
	- added in fits module of astropy.io\
	- Main changes to the file:\
		- Added Column object creation for quantities that are exported\
			- these are done as we go through the code.\
		- After all Column objects are created a ColDefs object is created from all the Column objects\
		- A HDU is created using `fits.BinTableHDU.from_columns()` function\
		- This hdu is written to a FITS file\
	- When Column object were created, units were associated with data sets in order to transfer\
	these to a Table environment at a later time.\
Removed:\
	- data_storage.py\
		- This used the old numpy.savez() file archive outputted by main coding script\
			- no longer being used\
	\
\
v.2.51 - May 18th 2018\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
- Added:\
	- data_table.py\
		- this file will take the npz archive file exported by the main computations script and load it into space\
			to be used for tabling the data is a nice way that is readable for viewers.\
- Changes to the coding script:\
	- added individual centre-of-mass components arrays, will use in data_table.py file for coordinate system, 		seems cleaner to do it this way. Have one com array with all components, and also individualized		components so that we don\'92t have to deal too much with numpy in the data_table.py file.\
	- added individual spanning distance component arrays, will use this just like above.\
\
v2.5 - May 16th 2018\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
- Added:\
	- Definitions.py\
		- This houses all the definitions needed to crunch the code\
		- All imports are now in this file that pertains to the specific processes that happen inside it\
			- Some definitions needed more input parameters added to them to be able\
			to communicate clearly from the main script file to the definition file\
			- This means that all variables called from the definitions.py file are local and will not need\
			to be imported from global file\
- Changes to the coding script:\
	- Moved all definitions to separate file (see above)\
	- Removed all cells (can add back in as work is being done on it)\
	- Tuned all functions to add new input parameters (see above)\
	- Added export system for bumpy archive of all the relevant data needed to plot and table.\
\
\
v2.0 - May 15th 2018\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
- Changes to the script:\
	- Defining Global Variables - need to move these to another file at a later time\
	- Imported most packages that will be used for the entirety of the script\
	- Definition/Return Modules Added:\
		- Bounding Box (gives lower and upper bounds for a box)\
		- Clump Box (creates data objects given bounding box)\
		- Velocity array (integrates over line of sight)\
		- Velocity array reducer (rids of nan data and writes perp coordinates)\
		- Array Flattener (flattens arrays into 1D)\
		- Plane Fit (Imported from Erik Rosolowsky, fits planes)\
		- Plane Fit visualization (used to plot data in 3d)\
		- Gradient Construction (used to compute gradients)\
		- Implied Angular Momentum (used to compute)\
		- Actual Angular Momentum( give data object, get 4 outputs relating to Ang-Mom)\
\
	Main part of the script:\
		- Wrote enough to input one file, and output the angular momentum data into numpy arrays\
\
\
\
\
\
\
v1.0 - May 4th 2018\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
- Added clump_code_1.py\
- clump_code_1.py changes include\
	- importing specific packages\
	- defining octant splitting for data\
	- defining master clump maker\
	- defining clump finder\
	- defining centre of mass\
- Wrote part of the main body of the .py file to compute data: includes;\
	- Loading data\
	- Working through all the defined functions above}